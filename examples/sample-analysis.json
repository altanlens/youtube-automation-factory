{
  "version": "1.0.0",
  "metadata": {
    "title": "Introduction to React Hooks",
    "description": "A comprehensive guide to understanding and using React Hooks in modern applications",
    "duration": 180,
    "style": "educational",
    "language": "en",
    "author": "YouTube Automation Factory",
    "created": "2025-09-23T16:00:00Z",
    "tags": ["react", "hooks", "javascript", "frontend", "tutorial"]
  },
  "scenes": [
    {
      "id": "intro-scene",
      "type": "excalidraw",
      "start": 0,
      "duration": 30,
      "data": {
        "title": "What are React Hooks?",
        "subtitle": "Modern React Development",
        "content": [
          "Functions that let you use state and other React features",
          "Introduced in React 16.8",
          "No more class components needed",
          "Reusable stateful logic"
        ]
      },
      "animation": {
        "type": "progressive-draw",
        "speed": "normal",
        "delay": 0.5
      },
      "audio": {
        "narration": "Welcome to our comprehensive guide on React Hooks. Hooks are a game-changing feature that allows you to use state and other React features in functional components."
      }
    },
    {
      "id": "useState-explanation",
      "type": "excalidraw",
      "start": 30,
      "duration": 45,
      "data": {
        "title": "useState Hook",
        "subtitle": "Managing Component State",
        "content": [
          "const [count, setCount] = useState(0)",
          "Returns current state and updater function",
          "State persists between renders",
          "Triggers re-render when updated"
        ]
      },
      "animation": {
        "type": "fade-in",
        "speed": "slow",
        "delay": 1.0
      },
      "audio": {
        "narration": "The useState hook is the most fundamental hook. It allows you to add state to functional components."
      }
    },
    {
      "id": "useEffect-explanation",
      "type": "excalidraw",
      "start": 75,
      "duration": 50,
      "data": {
        "title": "useEffect Hook",
        "subtitle": "Side Effects in Components",
        "content": [
          "Replaces componentDidMount, componentDidUpdate, componentWillUnmount",
          "Runs after every render by default",
          "Can be optimized with dependency array",
          "Cleanup function prevents memory leaks"
        ]
      },
      "animation": {
        "type": "slide-in",
        "speed": "normal"
      },
      "audio": {
        "narration": "The useEffect hook handles side effects in your components. It replaces multiple lifecycle methods from class components."
      }
    }
  ],
  "audio": {
    "globalNarration": "In this tutorial, we'll explore React Hooks - one of the most important features in modern React development.",
    "backgroundMusic": "educational-ambient.mp3",
    "volume": {
      "narration": 0.85,
      "music": 0.15,
      "effects": 0.3
    }
  }
}